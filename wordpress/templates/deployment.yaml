apiVersion: v1
items:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"wordpress-mariadb"}]'
    labels:
      app: wordpress
      app.kubernetes.io/name: wordpress
    name: wordpress
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: wordpress
        tier: frontend
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: wordpress
          tier: frontend
      spec:
        containers:
        - env:
            - name: DB_HOST
              value: "{{ .Values.database.host }}"
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: wordpress-mariadb
                  key: database-user
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: wordpress-mariadb
                  key: database-password
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: wordpress-mariadb
                  key: database-name
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: "{{ .Values.image.pullPolicy }}"
          name: wordpress
          ports:
          - containerPort: 80
            name: wordpress
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts: []
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes: []
{{- if eq .Values.deployment.mode "DEV" }}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations: {}
    labels:
      app: wordpress
      app.kubernetes.io/name: mariadb
      tier: mariadb
    name: wordpress-mariadb
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: wordpress
        tier: mariadb
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: wordpress
          tier: mariadb
      spec:
        containers:
        - env:
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: wordpress-mariadb
                  key: database-user
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: wordpress-mariadb
                  key: database-password
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: wordpress-mariadb
                  key: database-root-password
            - name: MYSQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: wordpress-mariadb
                  key: database-name
          image: image-registry.openshift-image-registry.svc:5000/openshift/mariadb
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - MYSQL_PWD="$MYSQL_PASSWORD" mysqladmin -u $MYSQL_USER ping
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: mariadb
          ports:
          - containerPort: 3306
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - MYSQL_PWD="$MYSQL_PASSWORD" mysqladmin -u $MYSQL_USER ping
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts: []
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes: []
{{- end }}
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
